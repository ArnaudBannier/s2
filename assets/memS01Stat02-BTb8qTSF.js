import"./modulepreload-polyfill-B5Qt9EMX.js";import{S as l,a as y,b as S,M as u}from"./s2-lerp-anim-Del0poW1.js";import{B as f,S as C}from"./base-memory-scene-tG6xURp8.js";import{S as b,t as g}from"./s2-code-DN5aJOX6.js";import"./s2-step-animator-CFLkTpzR.js";const L="Etat de la m√©moire : instructions simples 2",k=`**type:int** **fn:main**(**type:void**) {
    **type:short** **var:a** = **num:7**;
    **type:float** **var:f** = **num:3.14f**;
    **type:double** **var:d**, **var:g** = **num:2**;
    **type:int** **var:i** = **num:0**;
    
    **var:f** += **var:a**;
    **var:g** = **var:a** + **var:i**;
    **var:i**++;
    **var:f** = **var:a** - **var:i**;
    **kw:return** **num:0**;
}`,M=1.5,w=new l(640,360).scale(M),A=new y(new l(0,0),new l(8,4.5),w);class E extends f{memory;code;constructor(t){super(t,A),this.code=new b(this),this.code.setParent(this.getSVG()),this.setDefaultCodeStyle(this.code),this.code.setContent(g(k));const o=10;this.memory=new C(this,o,{isStacked:!0,addressStart:64,addressPrefix:"@",addressRadix:10}),this.memory.setParent(this.getSVG()),this.setDefaultMemoryStyle(this.memory),this.update(),this.createAnimation()}createAnimation(){this.animator.makeStep();const t=u.LIME_2,o=u.RED_3,a=u.GREY_5;let i=1;this.code.animateSetCurrentLine(i++,this.animator);const h=this.memory.createMemoryId();h.animateSetNameAndValue("a","7",this.animator,{valueColor:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator);const s=this.memory.createMemoryId();s.animateSetNameAndValue("f","3.14",this.animator,{valueColor:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator);const p=this.memory.createMemoryId(),m=this.memory.createMemoryId();let r=this.animator.createLabelAtCurrentTime();p.animateSetNameAndValue("d","?",this.animator,{label:r,valueColor:o}),m.animateSetNameAndValue("g","2",this.animator,{label:r,offset:100,valueColor:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator);const d=this.memory.createMemoryId();r=this.animator.createLabelAtCurrentTime(),d.animateSetNameAndValue("i","0",this.animator,{label:r,valueColor:t}),this.animator.makeStep(),this.update(),i++,this.code.animateSetCurrentLine(i++,this.animator),s.animateSetValue("10.14",this.animator,{color:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator),m.animateSetValue("7",this.animator,{color:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator),d.animateSetValue("1",this.animator,{color:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator),s.animateSetValue("6",this.animator,{color:t}),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator),this.animator.makeStep(),this.update(),this.code.animateSetCurrentLine(i++,this.animator),r=this.animator.createLabelAtCurrentTime(),d.animateColor(a,this.animator,{label:r}),m.animateColor(a,this.animator,{label:r}),p.animateColor(a,this.animator,{label:r}),s.animateColor(a,this.animator,{label:r}),h.animateColor(a,this.animator,{label:r}),this.animator.makeStep(),this.update()}}const c=document.querySelector("#app");c&&(c.innerHTML=`
        <div>
            <h1>${L}</h1>
            <svg xmlns="http://www.w3.org/2000/svg" id=test-svg class="responsive-svg" preserveAspectRatio="xMidYMid meet"></svg>
            <div class="figure-nav">
                <div>Animation : <input type="range" id="slider" min="0" max="100" step="1" value="0" style="width:50%"></div>
                <button id="reset-button"><i class="fa-solid fa-backward-fast"></i></button>
                <button id="prev-button"><i class="fa-solid fa-step-backward"></i></button>
                <button id="play-button"><i class="fa-solid fa-redo"></i></button>
                <button id="next-button"><i class="fa-solid fa-step-forward"></i></button>
                <button id="full-button"><i class="fa-solid fa-play"></i></button>
            </div>
        </div>`);const v=c?.querySelector("#test-svg"),n=document.querySelector("#slider");if(v&&n){const e=new E(v);let t=-1;e.animator.reset(),document.querySelector("#reset-button")?.addEventListener("click",()=>{t=-1,e.animator.stop(),e.animator.reset(),n.value="0"}),document.querySelector("#prev-button")?.addEventListener("click",()=>{t=S.clamp(t-1,0,e.animator.getStepCount()-1),e.animator.resetStep(t),e.update();const a=e.animator.getStepStartTime(t)/e.animator.getMasterDuration();n.value=(a*100).toString()}),document.querySelector("#next-button")?.addEventListener("click",()=>{t=S.clamp(t+1,0,e.animator.getStepCount()-1),e.animator.playStep(t);const a=e.animator.getStepStartTime(t)/e.animator.getMasterDuration();n.value=(a*100).toString()}),document.querySelector("#play-button")?.addEventListener("click",()=>{e.animator.playStep(t)}),document.querySelector("#full-button")?.addEventListener("click",()=>{e.animator.playMaster(),n.value="0"}),n.addEventListener("input",()=>{const a=n.valueAsNumber/100*e.animator.getMasterDuration();e.animator.stop(),e.animator.setMasterElapsed(a),t=e.animator.getStepIndexFromElapsed(a),e.getSVG().update()})}
