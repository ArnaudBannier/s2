import"./modulepreload-polyfill-B5Qt9EMX.js";import{p as T,l as f,m as _,S as p,a as F,c as $,e as M,M as l,g as A,i as b,j as q,C as E,b as V}from"./s2-lerp-anim-Del0poW1.js";import{S as D,a as G}from"./s2-draggable-container-DPmNIVdj.js";class R extends T{boundA=new f(-1/0,-1/0,"world");boundB=new f(1/0,1/0,"world");space=new _("world");setOwner(t=null){this.boundA.setOwner(t),this.boundB.setOwner(t),this.space.setOwner(t)}clearDirty(){this.boundA.clearDirty(),this.boundB.clearDirty(),this.space.clearDirty()}}class B extends D{constructor(t){super(t,new R)}updatePosition(t){const e=this.data.space.get(),s=this.scene.getActiveCamera(),i=t.get(e,s),o=this.data.boundA.get(e,s),r=this.data.boundB.get(e,s),m=Math.min(o.x,r.x),w=Math.max(o.x,r.x),u=Math.min(o.y,r.y),c=Math.max(o.y,r.y);i.max(m,u),i.min(w,c),t.setV(i,e),this.clearDirty()}}class v{elements=[0,0,0,0];constructor(t=0,e=0,s=0,i=0){this.set(t,e,s,i)}set(t=0,e=0,s=0,i=0){return this.elements[0]=t,this.elements[2]=e,this.elements[1]=s,this.elements[3]=i,this}fromArray(t,e=0){for(let s=0;s<4;s++)this.elements[s]=t[s+e];return this}identity(){return this.set(1,0,0,1)}multiplyMatrices(t,e){const s=t.elements,i=e.elements,o=this.elements,r=s[0],m=s[1],w=s[2],u=s[3],c=i[0],g=i[1],d=i[2],h=i[3];return o[0]=r*c+w*g,o[2]=r*d+w*h,o[1]=m*c+u*g,o[3]=m*d+u*h,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}copyFrom(t){for(let e=0;e<4;e++)this.elements[e]=t.elements[e];return this}makeScale(t,e){return this.set(t,0,0,e)}makeRotation(t){const e=Math.sin(t),s=Math.cos(t);return this.set(s,-e,e,s)}}const I=1.5,Y=new p(640,360).scale(I),H=new F(new p(0,0),new p(6,54/16),Y);class O extends ${vecU;vecV;matrix;lerpAnimU;lerpAnimV;colorAnim;playableU;playableV;playableColor;htmlEq;htmlEqMatrix;htmlFinalText;circleU;circleEigen1;circleEigen2;precision=.5;draggable;setCircleDefaultStyle(t){M.setTargets(t.data).setFillColor(l.GREY_6).setStrokeColor(l.GREY_4).setStrokeWidth(4,"view").setFillOpacity(1).setRadius(5,"view")}constructor(t,e,s,i){super(t,H),this.htmlEq=e,this.htmlEqMatrix=s,this.htmlFinalText=i;const o=this.addFillRect();M.setTargets(o.data).setColor(l.BLUE_GREY_9);const r=this.addWorldGrid();r.data.geometry.space.set("world"),r.data.geometry.steps.set(1,1,"world"),r.data.geometry.referencePoint.set(.5,.5,"world"),r.data.stroke.color.copy(l.CYAN_7),r.data.stroke.width.set(1,"view"),r.data.opacity.set(.3),this.addWorldGrid().data.stroke.color.copy(l.CYAN_7);for(let a=-5;a<=5;a++){const n=new A(this);n.data.position.set(a-.1,-.25,"world"),n.data.font.size.set(12,"view"),n.data.fill.color.copy(l.BLUE_GREY_2),n.data.layer.set(10),n.data.textAnchor.set("end"),n.setParent(this.getSVG()),n.setContent(a.toString())}for(let a=-3;a<=3;a++){if(a===0)continue;const n=new A(this);n.data.position.set(-.1,a-.25,"world"),n.data.font.size.set(12,"view"),n.data.fill.color.copy(l.BLUE_GREY_2),n.data.layer.set(10),n.data.textAnchor.set("end"),n.setParent(this.getSVG()),n.setContent(a.toString())}this.matrix=new v(1,0,0,1),this.vecU=this.addLine(),this.vecU.data.startPosition.set(0,0,"world"),this.vecU.data.endPosition.set(0,0,"world"),this.vecU.data.stroke.color.copy(l.LIGHT_BLUE_5),this.vecU.data.stroke.width.set(6,"view"),this.vecU.data.endPadding.set(10,"view"),this.vecU.data.layer.set(1),this.vecV=this.addLine(),this.vecV.data.startPosition.set(0,0,"world"),this.vecV.data.endPosition.set(0,0,"world"),this.vecV.data.stroke.color.copy(l.RED_5),this.vecV.data.stroke.width.set(6,"view"),this.vecV.data.endPadding.set(10,"view"),this.vecV.data.layer.set(2),this.circleU=this.addCircle(),this.circleU.data.fill.color.copy(l.LIGHT_BLUE_5),this.circleU.data.radius.set(.15,"world"),this.circleU.data.opacity.set(.5),this.circleU.data.layer.set(0),this.circleEigen1=this.addCircle(),this.circleEigen2=this.addCircle();for(const a of[this.circleEigen1.data,this.circleEigen2.data])a.stroke.color.copy(l.WHITE),a.stroke.width.set(2,"view"),a.fill.opacity.set(0),a.radius.set(.15,"world");const w=this.vecU.createArrowTip();w.setAnchorAlignment(-1),w.data.layer.set(1);const u=this.vecV.createArrowTip();u.setAnchorAlignment(-1),u.data.layer.set(2);const c=this.getActiveCamera().getLower(),g=this.getActiveCamera().getUpper(),d=this.addLine();d.data.startPosition.set(c.x,0,"world"),d.data.endPosition.set(g.x-.25,0,"world"),d.data.stroke.color.copy(l.GREY_1),d.data.stroke.width.set(4,"view"),d.createArrowTip();const h=this.addLine();h.data.startPosition.set(0,c.y,"world"),h.data.endPosition.set(0,g.y-.25,"world"),h.data.stroke.color.copy(l.GREY_1),h.data.stroke.width.set(4,"view"),h.createArrowTip(),this.draggable=new G(this),this.draggable.setParent(this.getSVG()),this.draggable.data.position.copy(this.vecU.data.endPosition),this.draggable.data.radius.set(30,"view");const x=new B(this);x.data.space.set("view"),x.data.boundA.set(Math.ceil(c.x),Math.ceil(c.y),"world"),x.data.boundB.set(Math.floor(g.x),Math.floor(g.y),"world"),this.draggable.setContainer(x),this.lerpAnimU=b.create(this,this.vecU.data.endPosition),this.lerpAnimV=b.create(this,this.vecV.data.endPosition),this.colorAnim=b.create(this,this.vecV.data.stroke.color);for(const a of[this.lerpAnimU,this.lerpAnimV,this.colorAnim])a.setCycleDuration(300).setEasing(q.outExpo).commitFinalState();this.playableU=new E(this.lerpAnimU),this.playableV=new E(this.lerpAnimV),this.playableColor=new E(this.colorAnim),this.draggable.setOnDrag((a,n)=>{this.setPosition(a.getPosition("world"),"free")}),this.draggable.setOnRelease((a,n)=>{const L=this.setPosition(a.getPosition("world"),"snap");a.data.position.setV(L,"world")}),this.setMatrix(0),this.update()}setMatrix(t){switch(t){case 0:this.matrix=new v(.5,3,.75,.5),this.circleEigen1.data.position.set(2,1,"world"),this.circleEigen2.data.position.set(-2,1,"world");break;case 1:this.matrix=new v(2,1,1,2),this.circleEigen1.data.position.set(1,1,"world"),this.circleEigen2.data.position.set(1,-1,"world");break;case 2:this.matrix=new v(2,-.5,1,.5),this.circleEigen1.data.position.set(1,1,"world"),this.circleEigen2.data.position.set(1,2,"world");break;case 3:this.matrix=new v(1,0,2,-2),this.circleEigen1.data.position.set(3,2,"world"),this.circleEigen2.data.position.set(0,1,"world");break;default:this.matrix=new v(1,-1,-1,1),this.circleEigen1.data.position.set(1,1,"world"),this.circleEigen2.data.position.set(1,-1,"world")}this.setPosition(new p(1,0),"snap"),this.draggable.data.position.set(1,0,"world"),this.htmlEqMatrix.innerHTML=window.katex.renderToString(`M = \\begin{pmatrix}
            ${this.matrix.elements[0]} & ${this.matrix.elements[2]} \\\\
            ${this.matrix.elements[1]} & ${this.matrix.elements[3]}
        \\end{pmatrix}`,{throwOnError:!1})}setPosition(t,e){const s=new p(V.snap(t.x,this.precision),V.snap(t.y,this.precision)),i=e==="snap"?s:t;this.lerpAnimU.commitInitialState(),this.vecU.data.endPosition.setV(i,"world"),this.lerpAnimU.commitFinalState(),this.playableU.play();const o=i.clone().apply2x2(this.matrix);this.lerpAnimV.commitInitialState(),this.vecV.data.endPosition.setV(o,"world"),this.lerpAnimV.commitFinalState(),this.playableV.play(),this.circleU.data.position.setV(s,"world"),this.colorAnim.commitInitialState();const r=p.isZeroV(i)===!1&&(p.isZeroV(o)||Math.abs(i.det(o))<.01*i.length()*o.length());if(r?this.vecV.data.stroke.color.copy(l.LIGHT_GREEN_5):this.vecV.data.stroke.color.copy(l.RED_5),this.colorAnim.commitFinalState(),this.playableColor.play(),e==="snap"){if(this.htmlEq.innerHTML=window.katex.renderToString(`\\begin{aligned}
            u &= (${i.x.toFixed(1)}, ${i.y.toFixed(1)}) \\\\
            Mu &= (${o.x.toFixed(1)}, ${o.y.toFixed(1)})
        \\end{aligned}`,{throwOnError:!1}),p.isZeroV(i))return this.htmlFinalText.innerHTML="Le vecteur nul n'est pas un vecteur propre par définition.",i;{const m=Math.abs(i.x)>1e-6?o.x/i.x:o.y/i.y;this.htmlFinalText.innerHTML=r?`Le vecteur est un vecteur propre de valeur propre ${m.toFixed(1)}.`:"Le vecteur n'est pas un vecteur propre."}}return i}setPrecision(t){this.precision=t}}const S=document.querySelector("#app");S&&(S.innerHTML=`
        <div>
            <h1>Vecteurs propres</h1>
            <div>
            Choix de la matrice :
            <select id="matrix-select">
                <option value="0">M = [[0.5, 3], [0.75, 0.5]]</option>
                <option value="1">M = [[2, 1], [1, 2]]</option>
                <option value="2">M = [[2, -0.5], [1, 0.5]]</option>
                <option value="3">M = [[1, 0], [2, -2]]</option>
                <option value="4">M = [[1, -1], [-1, 1]]</option>
            </select>
            </div>
            <p>Vous pouvez déplacer le vecteur $u$ (en bleu) avec la souris. Le vecteur $v = Mu$ (en rouge ou vert) est calculé en fonction de la matrice $M$.<br>
            Lorsque les deux vecteurs sont colinéaires, le vecteur $u$ est un vecteur propre de la matrice $M$.</p>
            </p>
            <p>
                <span id="eq-u" style="display:inline-flex;min-width:25ch;align-items: baseline"></span>
                <span id="eq-matrix"></span>
            </p>
            <p><span id="final-text"></span></p>
            <svg xmlns="http://www.w3.org/2000/svg" id=test-svg class="responsive-svg" preserveAspectRatio="xMidYMid meet"></svg>
            <p></p>
        </div>`);const U=document.querySelector("#eq-u"),P=document.querySelector("#eq-matrix"),k=document.querySelector("#final-text"),C=S?.querySelector("#test-svg");if(C&&U&&P&&k){const y=new O(C,U,P,k);document.getElementById("matrix-select").addEventListener("change",e=>{const s=e.target;y.setMatrix(parseInt(s.value,10))})}
