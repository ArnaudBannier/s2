import"./modulepreload-polyfill-B5Qt9EMX.js";import{S as r,a as C,b as D,c as O,M as n,d as x,e as R,f as G,g as U,h as W,i as o,j as c,k as B}from"./s2-lerp-anim-PicSQhJC.js";import{S as _,t as Y}from"./s2-code-DRMYSgef.js";import{S as I}from"./s2-anim-group-CMYaroqb.js";const H="Parcours infixe, préfixe et suffixe",M=`**kw:fonction** **fn:parcoursInfixe**(**var:n**: **type:Noeud**):
  **kw:si** **var:n**.**var:gauche** existe **kw:alors**
    **fn:parcoursInfixe**(**var:n**.**var:gauche**)
  **fn:traiter**(**var:n**)
  **kw:si** **var:n**.**var:droit** existe **kw:alors**
    **fn:parcoursInfixe**(**var:n**.**var:droit**)`,z=`**kw:fonction** **fn:parcoursPrefixe**(**var:n**: **type:Noeud**):
  **fn:traiter**(**var:n**)
  **kw:si** **var:n**.**var:gauche** existe **kw:alors**
    **fn:parcoursPrefixe**(**var:n**.**var:gauche**)
  **kw:si** **var:n**.**var:droit** existe **kw:alors**
    **fn:parcoursPrefixe**(**var:n**.**var:droit**)`,V=`**kw:fonction** **fn:parcoursSuffixe**(**var:n**: **type:Noeud**):
  **kw:si** **var:n**.**var:gauche** existe **kw:alors**
    **fn:parcoursSuffixe**(**var:n**.**var:gauche**)
  **kw:si** **var:n**.**var:droit** existe **kw:alors**
    **fn:parcoursSuffixe**(**var:n**.**var:droit**)
  **fn:traiter**(**var:n**)`,q=new r(720,360).scale(1.5),b=new R(new r(0,0),new r(9,4.5),q,1);class j{scene;font;constructor(t){this.scene=t,this.font=new O,this.font.family.set("monospace"),this.font.size.set(20,"view"),this.font.relativeLineHeight.set(1.3)}setNodeDefault(t){const e=t.data;e.background.fill.color.copyIfUnlocked(n.GREY_6),e.background.stroke.color.copyIfUnlocked(n.GREY_4),e.background.stroke.width.set(4,"view"),e.background.cornerRadius.set(10,"view"),e.text.fill.color.copyIfUnlocked(n.WHITE),e.text.horizontalAlign.set("center"),e.text.verticalAlign.set("middle"),e.text.font.copyIfUnlocked(this.font),e.text.font.weight.set(700),e.padding.set(0,0,"view"),e.minExtents.set(.4,.35,"world"),e.layer.set(2)}setNodeSelected(t){const e=t.data;e.background.fill.color.copyIfUnlocked(n.GREY_8),e.background.stroke.color.copyIfUnlocked(n.BLUE_5),e.text.fill.color.copyIfUnlocked(n.BLUE_2)}createSelectNodeAnim(t){const e=t.data,a=new I(this.scene);return a.addLerpProperties([e.background.fill.color,e.background.stroke.color,e.text.fill.color],300,c.inOut),this.setNodeSelected(t),a.commitLerpFinalStates(),a}setNodeExplored(t){const e=t.data;e.background.fill.color.copyIfUnlocked(n.CYAN_7),e.background.stroke.color.copyIfUnlocked(n.CYAN_3),e.text.fill.color.copyIfUnlocked(n.WHITE)}createExploreNodeAnim(t){const e=t.data,a=new I(this.scene);return a.addLerpProperties([e.background.fill.color,e.background.stroke.color,e.text.fill.color],300,c.inOut),this.setNodeExplored(t),a.commitLerpFinalStates(),a}setEdgeBase(t){x.setTargets(t.data).setStrokeColor(n.GREY_6).setStrokeWidth(4,"view").setStrokeLineCap("round").setEdgeStartDistance(0,"view").setEdgeEndDistance(10,"view").setLayer(0)}setEdgeEmphasized(t){x.setTargets(t.data).setStrokeColor(n.WHITE).setStrokeWidth(5,"view").setStrokeLineCap("round").setEdgeStartDistance(0,"view").setEdgeEndDistance(11,"view").setLayer(1),t.createArrowTip().data.pathStrokeFactor.set(.3)}setEdgeSelected(t){t.data.stroke.color.copyIfUnlocked(n.BLUE_5)}createSelectEdgeAnim(t){const e=o.create(this.scene,t.data.stroke.color).setCycleDuration(300).setEasing(c.inOut);return this.setEdgeSelected(t),e.commitFinalState(),e}setEdgeExplored(t){t.data.stroke.color.copyIfUnlocked(n.GREY_7)}createExploreEdgeAnim(t){const e=o.create(this.scene,t.data.stroke.color).setCycleDuration(300).setEasing(c.inOut);return this.setEdgeExplored(t),e.commitFinalState(),e}}class K{root;style;scene;mainGroup;bTreeNodes;levelDistance=1.5;baseSep=.6;height;size;center;extents;maxNodeExtents=new r;constructor(t,e,a=new j(t)){this.scene=t,this.style=a,this.center=new r,this.extents=new r,this.bTreeNodes=[],this.mainGroup=t.addGroup(new B),this.height=0,this.size=0,this.root=this.createNodes(e),this.createNodeLines(this.root,null)}createNodes(t,e=0){const a=new T(this.scene,t.data);if(this.height=Math.max(this.height,e+1),a.node.setParent(this.mainGroup),this.style.setNodeDefault(a.node),t.left){const i=this.createNodes(t.left,e+1);a.setLeft(i)}if(t.right){const i=this.createNodes(t.right,e+1);a.setRight(i)}return this.size++,this.bTreeNodes.push(a),a}createNodeLines(t,e){t!==null&&(e&&(t.parentEdge=this.scene.addLineEdge(e.node,t.node,this.mainGroup),t.parentEmphEdge=this.scene.addLineEdge(e.node,t.node,this.mainGroup),this.style.setEdgeBase(t.parentEdge),this.style.setEdgeEmphasized(t.parentEmphEdge)),this.createNodeLines(t.left,t),this.createNodeLines(t.right,t))}getExtents(){return this.extents}computeExtents(){this.extents.x=(this.size-1)*this.baseSep,this.extents.y=(this.height-1)*this.levelDistance,this.extents.scale(.5),this.maxNodeExtents.set(0,0);for(const t of this.bTreeNodes){const e=t.node.getExtents("world");this.maxNodeExtents.maxV(e)}return this.extents.addV(this.maxNodeExtents),this.extents}computeLayout(t){this.center.copy(t),this.computeExtents(),this.computeLayoutRec(this.root,0,0)}computeLayoutRec(t,e,a){return t===null||(e=this.computeLayoutRec(t.left,e,a+1),t.node.data.position.set(this.center.x-this.extents.x+this.maxNodeExtents.x+e*this.baseSep,this.center.y+this.extents.y-this.maxNodeExtents.y-a*this.levelDistance,"world"),e++,e=this.computeLayoutRec(t.right,e,a+1)),e}animateSelectNode(t,e){if(e.parentEmphEdge){e.parentEmphEdge.data.pathTo.set(0);const i=o.create(this.scene,e.parentEmphEdge.data.pathTo).setCycleDuration(500).setEasing(c.inOut);e.parentEmphEdge.data.pathTo.set(1),t.addAnimation(i.commitFinalState())}let a=null;a=this.style.createSelectNodeAnim(e.node),e.parentEmphEdge?t.addAnimation(a,"previous-start",e.parentEdge?100:0):t.addAnimation(a,"timeline-end",e.parentEdge?100:0),e.left&&e.left.parentEdge&&(a=this.style.createSelectEdgeAnim(e.left.parentEdge),t.addAnimation(a,"previous-start",0)),e.right&&e.right.parentEdge&&(a=this.style.createSelectEdgeAnim(e.right.parentEdge),t.addAnimation(a,"previous-start",0))}animateExploreNode(t,e){const a=this.style.createExploreNodeAnim(e.node);t.addAnimation(a,"timeline-end",0)}animateExitParentEdge(t,e){if(!e.parentEdge||!e.parentEmphEdge)return;const a=o.create(this.scene,e.parentEmphEdge.data.pathTo).setCycleDuration(500).setEasing(c.inOut);e.parentEmphEdge.data.pathTo.set(0),t.addAnimation(a.commitFinalState(),"timeline-end",0);const i=this.style.createExploreEdgeAnim(e.parentEdge);t.addAnimation(i,"previous-start",200)}}class T{data;parent=null;left=null;right=null;node;parentEdge=null;parentEmphEdge=null;constructor(t,e=0){this.data=e,this.node=t.addPlainNode(),this.node.setContent(e.toString())}setLeft(t){this.left=t,t.parent=this}setRight(t){this.right=t,t.parent=this}}class k extends D{tree;animator;codeStack=[];codeNW=new r(-8,4);codePositions=[];outputText;outputBackground;outputTitle;setDefaultFont(t){t.family.set("monospace"),t.size.set(16,"view"),t.relativeLineHeight.set(1.3)}setCodeStyle(t){const e=new O;e.family.set("monospace"),e.size.set(16,"view"),e.relativeLineHeight.set(1.3),this.setDefaultFont(t.data.text.font),t.data.text.fill.color.copyIfUnlocked(n.WHITE),t.data.padding.set(20,10,"view"),t.data.minExtents.set(3.5,1,"world"),t.data.background.fill.color.copyIfUnlocked(n.GREY_9),t.data.background.stroke.color.copyIfUnlocked(n.GREY_7),t.data.background.stroke.width.set(2,"view"),t.data.background.cornerRadius.set(10,"view"),t.data.currentLine.opacity.set(1),t.data.currentLine.fill.color.copyIfUnlocked(n.BLACK),t.data.currentLine.fill.opacity.set(.5),t.data.currentLine.stroke.color.copyIfUnlocked(n.WHITE),t.data.currentLine.stroke.width.set(1,"view"),t.data.currentLine.stroke.opacity.set(.2),t.data.currentLine.padding.set(-.5,2,"view"),t.data.currentLine.index.set(0)}setOutputTextStyle(t){this.setDefaultFont(t.data.font),t.data.fill.color.copyIfUnlocked(n.WHITE)}setOutputBackgroundStyle(t){x.setTargets(t.data).setFillColor(n.GREY_9).setStrokeColor(n.GREY_7).setStrokeWidth(2,"view").setCornerRadius(10,"view")}constructor(t,e,a){super(t,b),this.animator=new G(this);const i=this.addFillRect();x.setTargets(i.data).setColor(n.GREY_8),this.outputBackground=this.addRect(),this.outputTitle=new U(this),this.outputTitle.setParent(this.getSVG()),this.outputTitle.setContent("Noeuds explorés :"),this.outputTitle.data.fill.color.copyIfUnlocked(n.ORANGE_2),this.setDefaultFont(this.outputTitle.data.font),this.outputText=new W(this),this.outputText.setParent(this.getSVG()),this.setOutputTextStyle(this.outputText),this.setOutputBackgroundStyle(this.outputBackground),this.update(),this.tree=new K(this,e);let s="";switch(a){case"in-order":s=M;break;case"pre-order":s=z;break;case"post-order":s=V;break}for(let h=0;h<this.tree.height;h++){const m=new _(this);m.setParent(this.getSVG()),this.codeStack.push(m),this.setCodeStyle(m),m.setContent(Y(s)),m.data.anchor.set("north-west")}this.update(),this.tree.computeExtents();const l=this.tree.getExtents(),S=this.codeStack[0].getExtents("world"),y=2*l.x+2*S.x+1.5,P=2*Math.max(l.y,S.y),F=new r(y/2-l.x,0),E=new r(-y/2,P/2);this.tree.computeLayout(F);for(let h=0;h<this.codeStack.length;h++){const m=new r(E.x+.2*h,E.y-.2*h);this.codePositions.push(m),this.codeStack[h].data.position.setV(m,"world")}const p=this.getActiveCamera().viewToWorldLength(20),w=this.getActiveCamera().viewToWorldLength(21),L=this.getActiveCamera().viewToWorldLength(16),A=2*w+1*p,g=new r(E.x,-E.y+A);switch(this.outputBackground.data.position.setV(g,"world"),this.outputBackground.data.extents.set(3.5,A/2,"world"),this.outputBackground.data.anchor.set("north-west"),this.outputTitle.data.position.set(g.x+p,g.y-L-.5*p,"world"),this.outputText.data.position.set(g.x+p,g.y-L-w-.5*p,"world"),this.update(),a){case"in-order":this.createInOrderAnimation(this.tree.root);break;case"pre-order":this.createPreOrderAnimation(this.tree.root);break;case"post-order":this.createPostOrderAnimation(this.tree.root);break}this.update()}animateCodeFadeIn(t){if(t<0||t>=this.codeStack.length)return;const e=this.codeStack[t];if(e.data.currentLine.index.set(0),t===0)return;const a=this.codePositions[t];e.data.currentLine.index.set(0),e.data.opacity.set(0),e.data.position.set(a.x+.5,a.y,"world");const i=o.create(this,e.data.position),s=o.create(this,e.data.opacity),l=o.create(this,e.data.currentLine.index);e.data.currentLine.index.set(0),e.data.opacity.set(1),e.data.position.setV(a,"world");for(const S of[i,s,l])S.setCycleDuration(500).setEasing(c.out).commitFinalState();this.animator.enableElement(e,!0),this.animator.addAnimation(i,"timeline-end",0),this.animator.addAnimation(s,"previous-start",0),this.animator.addAnimation(l,"previous-start",0)}animateCodeFadeOut(t){if(t<0||t>=this.codeStack.length)return;const e=this.codeStack[t];if(e.data.currentLine.index.set(0),t===0)return;const a=o.create(this,e.data.position),i=o.create(this,e.data.opacity),s=this.codePositions[t];e.data.opacity.set(0),e.data.position.set(s.x+.5,s.y,"world");for(const l of[a,i])l.setCycleDuration(500).setEasing(c.out).commitFinalState();this.animator.addAnimation(a,"timeline-end",0),this.animator.addAnimation(i,"previous-start",0),this.animator.enableElement(e,!1)}animateCodeLineIndex(t,e){if(t<0||t>=this.codeStack.length)return;const a=this.codeStack[t],i=o.create(this,a.data.currentLine.index).setCycleDuration(500).setEasing(c.inOut);a.data.currentLine.index.set(e),this.animator.addAnimation(i.commitFinalState(),"timeline-end",0)}animateWriteOutput(t){if(this.outputText.getTSpanCount()>0){const i=this.outputText.getTSpan(this.outputText.getTSpanCount()-1),s=o.create(this,i.data.fill.color).setCycleDuration(500).setEasing(c.inOut);i.data.fill.color.copy(n.GREY_4),this.animator.addAnimation(s.commitFinalState(),"previous-start",0)}const e=this.outputText.addTSpan(t);e.data.opacity.set(0),e.data.fill.color.copy(n.WHITE),e.data.fill.color.lock();const a=o.create(this,e.data.opacity).setCycleDuration(500).setEasing(c.inOut);e.data.opacity.set(1),this.animator.addAnimation(a.commitFinalState(),"previous-start",200)}createInOrderAnimation(t,e=0){t&&(this.tree.animateSelectNode(this.animator,t),this.animateCodeFadeIn(e),this.animator.makeStep(),this.animateCodeLineIndex(e,1),this.animator.makeStep(),t.left&&(this.animateCodeLineIndex(e,2),this.animator.makeStep(),this.createInOrderAnimation(t.left,e+1)),this.animateCodeLineIndex(e,3),this.animator.makeStep(),this.tree.animateExploreNode(this.animator,t),this.animateWriteOutput(t.data.toString()+", "),this.animator.makeStep(),this.animateCodeLineIndex(e,4),this.animator.makeStep(),t.right&&(this.animateCodeLineIndex(e,5),this.animator.makeStep(),this.createInOrderAnimation(t.right,e+1)),this.tree.animateExitParentEdge(this.animator,t),this.animateCodeFadeOut(e),this.animator.makeStep())}createPreOrderAnimation(t,e=0){t&&(this.tree.animateSelectNode(this.animator,t),this.animateCodeFadeIn(e),this.animator.makeStep(),this.animator.makeStep(),this.animateCodeLineIndex(e,1),this.animator.makeStep(),this.tree.animateExploreNode(this.animator,t),this.animateWriteOutput(t.data.toString()+", "),this.animator.makeStep(),this.animateCodeLineIndex(e,2),this.animator.makeStep(),t.left&&(this.animateCodeLineIndex(e,3),this.animator.makeStep(),this.createPreOrderAnimation(t.left,e+1)),this.animateCodeLineIndex(e,4),this.animator.makeStep(),t.right&&(this.animateCodeLineIndex(e,5),this.animator.makeStep(),this.createPreOrderAnimation(t.right,e+1)),this.tree.animateExitParentEdge(this.animator,t),this.animateCodeFadeOut(e),this.animator.makeStep())}createPostOrderAnimation(t,e=0){t&&(this.tree.animateSelectNode(this.animator,t),this.animateCodeFadeIn(e),this.animator.makeStep(),this.animator.makeStep(),this.animateCodeLineIndex(e,1),this.animator.makeStep(),t.left&&(this.animateCodeLineIndex(e,2),this.animator.makeStep(),this.createPostOrderAnimation(t.left,e+1)),this.animateCodeLineIndex(e,3),this.animator.makeStep(),t.right&&(this.animateCodeLineIndex(e,4),this.animator.makeStep(),this.createPostOrderAnimation(t.right,e+1)),this.animateCodeLineIndex(e,5),this.animator.makeStep(),this.tree.animateExploreNode(this.animator,t),this.animateWriteOutput(t.data.toString()+", "),this.animator.makeStep(),this.tree.animateExitParentEdge(this.animator,t),this.animateCodeFadeOut(e),this.animator.makeStep())}}const v=document.querySelector("#app");v&&(v.innerHTML=`
        <div>
            <h1>${H}</h1>
            <svg xmlns="http://www.w3.org/2000/svg" id="test-svg" class="responsive-svg" preserveAspectRatio="xMidYMid meet"></svg>
            <div class="figure-nav">
                <div>Animation : <input type="range" id="slider" min="0" max="100" step="1" value="0" style="width:50%"></div>
                <select id="order-select">
                    <option value="pre-order">Préfixe</option>
                    <option value="in-order">Infixe</option>
                    <option value="post-order">Suffixe</option>
                </select>
                <button id="reset-button"><i class="fa-solid fa-backward-fast"></i></button>
                <button id="prev-button"><i class="fa-solid fa-step-backward"></i></button>
                <button id="play-button"><i class="fa-solid fa-redo"></i></button>
                <button id="next-button"><i class="fa-solid fa-step-forward"></i></button>
                <button id="full-button"><i class="fa-solid fa-play"></i></button>
            </div>
        </div>`);const f=v?.querySelector("#test-svg"),u=document.querySelector("#slider");if(f&&u){const d={data:0,left:{data:1,left:{data:3,right:{data:7}},right:{data:4,left:{data:8}}},right:{data:2,left:{data:5,left:{data:9},right:{data:10}},right:{data:6,left:{data:11}}}};let t=new k(f,d,"pre-order"),e=-1;t.animator.reset(),document.querySelector("#reset-button")?.addEventListener("click",()=>{e=-1,t.animator.stop(),t.animator.reset(),u.value="0"}),document.querySelector("#prev-button")?.addEventListener("click",()=>{e=C.clamp(e-1,0,t.animator.getStepCount()-1),t.animator.resetStep(e),t.update();const s=t.animator.getStepStartTime(e)/t.animator.getMasterDuration();u.value=(s*100).toString()}),document.querySelector("#next-button")?.addEventListener("click",()=>{e=C.clamp(e+1,0,t.animator.getStepCount()-1),t.animator.playStep(e);const s=t.animator.getStepStartTime(e)/t.animator.getMasterDuration();u.value=(s*100).toString()}),document.querySelector("#play-button")?.addEventListener("click",()=>{t.animator.playStep(e)}),document.querySelector("#full-button")?.addEventListener("click",()=>{t.animator.playMaster(),u.value="0"}),u.addEventListener("input",()=>{const s=u.valueAsNumber/100*t.animator.getMasterDuration();t.animator.stop(),t.animator.setMasterElapsed(s),e=t.animator.getStepIndexFromElapsed(s),t.getSVG().update()}),document.getElementById("order-select").addEventListener("change",i=>{const s=i.target;switch(t.animator.stop(),s.value){case"in-order":t=new k(f,d,"in-order");break;case"pre-order":t=new k(f,d,"pre-order");break;case"post-order":default:t=new k(f,d,"post-order");break}e=-1,t.animator.stop(),t.animator.reset()})}
